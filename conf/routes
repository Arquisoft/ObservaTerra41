# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /              				controllers.Application.index()
GET		/country					controllers.Admin.showCountries()
GET		/indicator					controllers.Admin.showIndicators()
GET		/observation				controllers.Admin.showObservations()
GET     /bars/:indicator   			controllers.Application.bars(indicator:String)
POST	/comparacion				controllers.Application.comparar()
GET		/comparacion				controllers.Application.comparar()
GET 	/data						controllers.Application.data()
GET		/developers					controllers.Application.authors()

POST	/country					controllers.Admin.newCountry()
POST	/country/delete/:code       controllers.Admin.deleteCountry(code: String)
POST	/indicator					controllers.Admin.newIndicator()
POST	/indicator/delete/:code     controllers.Admin.deleteIndicator(code: String)
POST	/observation				controllers.Admin.newObservation()
POST	/observation/delete/:code   controllers.Admin.deleteObservation(code: Long)

# API 

GET		/api/country					controllers.API.countries()
GET		/api/country/:code				controllers.API.country(code: String)
PUT		/api/country/:code				controllers.API.updateCountry(code: String)
POST	/api/country					controllers.API.addCountry()
DELETE	/api/country/:code				controllers.API.delCountry(code: String)

GET		/api/observation						controllers.API.observations()
GET		/api/observation/indicator/:indicator	controllers.API.observationsByIndicator(indicator: String)
GET		/api/observation/country/:country		controllers.API.observationsByCountry(country: String)

POST	/api/observation/:country/:indicator	controllers.API.addObservation(country:String, indicator: String)
DELETE	/api/observation/:country/:indicator	controllers.API.delObservation(country:String, indicator: String)

POST	/api/excel/upload			controllers.API.uploadExcel()
POST	/api/json/upload			controllers.API.uploadJSON()
POST	/api/csv/upload				controllers.API.uploadCSV()
POST	/otherFile/upload				controllers.Application.saveFile()


# API2 showing the concept of HATEOAS
GET		/api2/country					controllers.API.countriesHATEOAS()
GET		/api2/country/:code				controllers.API.countryHATEOAS(code: String)
PUT		/api2/country/:code				controllers.API.updateCountry(code: String)
POST	/api2/country					controllers.API.addCountry()
DELETE	/api2/country/:code				controllers.API.delCountry(code: String)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)



# User
GET		/register					controllers.Application.showRegister()
GET		/user						controllers.Admin.showUsers()
POST	/user/delete/:id			controllers.Admin.deleteUser(id: Long)
GET		/user/update/:name			controllers.UserController.fillRegister(name: String)
POST	/user/update/info/:name			controllers.UserController.modifyInfo(name: String)
POST	/user/update/pass/:name			controllers.UserController.modifyPass(name: String)

#Url
GET     /url						controllers.Admin.showUrls()
POST	/url/delete/:id				controllers.Admin.deleteUrl(id: Long)
POST	/url/add					controllers.Admin.addUrl()

POST	/register				controllers.Application.newUser()

# Login
GET     /login                  controllers.Application.login()
POST    /login                  controllers.Application.authenticate()
GET 	/logout					controllers.UserController.cerrarSesion()

GET		/language				controllers.Application.changeLanguage()


#data request
GET		/data						controllers.Admin.collectData()